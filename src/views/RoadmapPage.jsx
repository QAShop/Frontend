
import React, { useState } from 'react';
import { ChevronLeft, ChevronRight } from 'lucide-react';

const RoadmapPage = () => {
  const [currentSlide, setCurrentSlide] = useState(0);

  const phases = [
    {
      id: 1,
      icon: 'üß±',
      title: '–≠—Ç–∞–ø 1: –û—Å–Ω–æ–≤—ã –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞',
      subtitle: '"–ó–∞–∫–ª–∞–¥—ã–≤–∞–µ–º —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç"',
      borderColor: 'border-blue-500',
      items: [
        { icon: 'üèÅ', title: '–°—Ç–∞—Ä—Ç!', desc: '–ú–æ–π –ø—É—Ç—å, —Ü–µ–ª–∏ –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.' },
        { icon: 'üõ†Ô∏è', title: '–í—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:', desc: 'Python, Pytest, Requests –¥–ª—è API.' },
        { icon: 'üíª', title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞:', desc: 'PyCharm, Git, venv.' },
        { icon: 'üåø', title: 'Git –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö:', desc: 'commit, push, pull.' },
        { icon: 'üîç', title: '"–†–∞–∑–≤–µ–¥–∫–∞":', desc: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ API —á–µ—Ä–µ–∑ Postman/Swagger.' },
        { icon: 'üêç', title: '–ü—Ä–∞–∫—Ç–∏–∫–∞ Python:', desc: '–†–∞–±–æ—Ç–∞ —Å JSON –∏ —Å–ª–æ–≤–∞—Ä—è–º–∏.' }
      ],
      result: '–ì–æ—Ç–æ–≤–æ–µ –∫ —Ä–∞–±–æ—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ, –ø–æ–Ω–∏–º–∞–Ω–∏–µ –æ—Å–Ω–æ–≤ Git –∏ API —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ù–∞–ø–∏—Å–∞–Ω—ã –ø–µ—Ä–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏.'
    },
    {
      id: 2,
      icon: 'üèóÔ∏è',
      title: '–≠—Ç–∞–ø 2: –°—Ç—Ä–æ–∏–º API-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫',
      subtitle: '"–û–±—â–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –Ω–∞ \'—Ç—ã\'"',
      borderColor: 'border-orange-500',
      items: [
        { icon: '‚úÖ', title: '–ü–µ—Ä–≤—ã–π API-—Ç–µ—Å—Ç', desc: '—Å `requests` –∏ `pytest`.' },
        { icon: 'üìÇ', title: '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞:', desc: '–ø–∞–ø–∫–∏, –∫–ª–∏–µ–Ω—Ç—ã, –º–æ–¥–µ–ª–∏.' },
        { icon: 'üì¶', title: 'API-–∫–ª–∏–µ–Ω—Ç', desc: '–¥–ª—è –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.' },
        { icon: 'üìÑ', title: '–í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ö–µ–º', desc: '–æ—Ç–≤–µ—Ç–∞ —Å `Pydantic`.' },
        { icon: 'üîÑ', title: '–¢–µ—Å—Ç–∏—Ä—É–µ–º CRUD', desc: '(POST, GET, PUT, DELETE).' },
        { icon: '‚öôÔ∏è', title: '–§–∏–∫—Å—Ç—É—Ä—ã PyTest', desc: '–¥–ª—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ç–µ—Å—Ç–æ–≤.' },
        { icon: 'üîë', title: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è', desc: '–∏ —Ä–∞–±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–∞–º–∏.' }
      ],
      result: '–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ —Ä–∞—Å—à–∏—Ä—è–µ–º—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è API-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–æ–∫—Ä—ã–≤–∞—é—â–∏–π –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.'
    },
    {
      id: 3,
      icon: 'üé®',
      title: '–≠—Ç–∞–ø 3: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ UI',
      subtitle: '"–†–∏—Å—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é"',
      borderColor: 'border-yellow-600',
      items: [
        { icon: 'üé¨', title: '–ù–æ–≤—ã–π —Å—Ç–∞—Ä—Ç:', desc: '–í—ã–±–æ—Ä Playwright/Selenium.' },
        { icon: 'üèõÔ∏è', title: '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ UI-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞:', desc: 'Page Object Model.' },
        { icon: 'üñ±Ô∏è', title: '–ü–µ—Ä–≤—ã–π UI-—Ç–µ—Å—Ç:', desc: '–ª–æ–≥–∏–Ω –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.' },
        { icon: 'üéØ', title: '–õ–æ–∫–∞—Ç–æ—Ä—ã –∏ –æ–∂–∏–¥–∞–Ω–∏—è,', desc: '–±–æ—Ä—å–±–∞ —Å "flaky".' },
        { icon: 'üé≠', title: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö', desc: '—Å `Faker` –¥–ª—è —Ñ–æ—Ä–º.' },
        { icon: 'üö∂‚Äç‚ôÇÔ∏è', title: '–°–∫–≤–æ–∑–Ω–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π:', desc: '–ü–æ–∫—Ä—ã–≤–∞–µ–º –ø—É—Ç—å —é–∑–µ—Ä–∞.' }
      ],
      result: '–°–æ–∑–¥–∞–Ω –≤—Ç–æ—Ä–æ–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è UI-—Ç–µ—Å—Ç–æ–≤ –Ω–∞ –±–∞–∑–µ –ø–∞—Ç—Ç–µ—Ä–Ω–∞ POM, —Å–ø–æ—Å–æ–±–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏.'
    },
    {
      id: 4,
      icon: 'üöÄ',
      title: '–≠—Ç–∞–ø 4: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏ CI/CD',
      subtitle: '"–î–≤–∞ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ ‚Äî –æ–¥–Ω–∞ –∫–æ–º–∞–Ω–¥–∞"',
      borderColor: 'border-green-500',
      items: [
        { icon: 'üîó', title: '–°–∏–Ω–µ—Ä–≥–∏—è:', desc: '–ì–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ API –¥–ª—è UI-—Ç–µ—Å—Ç–æ–≤.' },
        { icon: 'üìä', title: 'Allure Reports:', desc: '–ï–¥–∏–Ω—ã–π –∫—Ä–∞—Å–∏–≤—ã–π –æ—Ç—á—ë—Ç –¥–ª—è –≤—Å–µ–≥–æ.' },
        { icon: 'ü§ñ', title: 'GitHub Actions:', desc: '–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ CI.' },
        { icon: '‚ö°', title: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:', desc: '–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∏ Headless-–∑–∞–ø—É—Å–∫.' },
        { icon: 'üîî', title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', desc: '–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –≤ Telegram.' },
        { icon: 'üèÜ', title: '–§–∏–Ω–∞–ª!', desc: '–†–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤–∞ –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è.' }
      ],
      result: '–î–≤–∞ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –µ–¥–∏–Ω—ã–π CI/CD-–ø–∞–π–ø–ª–∞–π–Ω —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–ø—É—Å–∫–æ–º, —Å–±–æ—Ä–∫–æ–π –æ—Ç—á—ë—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.'
    }
  ];

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % phases.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + phases.length) % phases.length);
  };

  const goToSlide = (index) => {
    setCurrentSlide(index);
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-800 mb-2">
            –†–æ–∞–¥–º–∞–ø "QA Automation garage"
          </h1>
          <p className="text-lg text-gray-600">
            –û—Ç —Å—Ç–∞—Ä—Ç–∞ –¥–æ –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Å CI/CD
          </p>
        </div>

        {/* Carousel Container */}
        <div className="relative pt-4 pb-12">
          {/* Navigation Buttons */}
          <button
            onClick={prevSlide}
            className="absolute left-0 top-1/2 -translate-y-1/2 -translate-x-4 z-10 bg-white rounded-full p-2 shadow-lg hover:shadow-xl transition-shadow"
            disabled={currentSlide === 0}
          >
            <ChevronLeft className={`w-6 h-6 ${currentSlide === 0 ? 'text-gray-300' : 'text-gray-600'}`} />
          </button>

          <button
            onClick={nextSlide}
            className="absolute right-0 top-1/2 -translate-y-1/2 translate-x-4 z-10 bg-white rounded-full p-2 shadow-lg hover:shadow-xl transition-shadow"
            disabled={currentSlide === phases.length - 1}
          >
            <ChevronRight className={`w-6 h-6 ${currentSlide === phases.length - 1 ? 'text-gray-300' : 'text-gray-600'}`} />
          </button>

          {/* Carousel Content */}
          <div className="overflow-x-hidden overflow-y-visible">
            <div
              className="flex transition-transform duration-500 ease-in-out"
              style={{ transform: `translateX(-${currentSlide * 100}%)` }}
            >
              {phases.map((phase, index) => (
                <div key={phase.id} className="w-full flex-shrink-0 px-4 pb-4">
                  <div className={`bg-white rounded-xl shadow-lg border-t-4 ${phase.borderColor} p-6 mx-auto max-w-4xl`}>
                    {/* Phase Header */}
                    <div className="flex items-center mb-5">
                      <div className="text-4xl mr-4">{phase.icon}</div>
                      <div className="flex flex-col">
                        <div className="text-xl font-bold text-gray-800">
                          {phase.title}
                        </div>
                        <div className="text-sm italic text-gray-600">
                          {phase.subtitle}
                        </div>
                      </div>
                    </div>

                    {/* Content - Two columns */}
                    <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                      {/* Items List */}
                      <div>
                        <div className="space-y-3">
                          {phase.items.map((item, itemIndex) => (
                            <div key={itemIndex} className="flex items-start">
                              <span className="text-lg mr-3 flex-shrink-0 pt-0.5">{item.icon}</span>
                              <div className="text-sm leading-relaxed">
                                <strong>{item.title}</strong> {item.desc}
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>

                      {/* Result */}
                      <div className="lg:border-l-2 lg:border-gray-200 lg:pl-6">
                        <div className="font-semibold text-gray-700 mb-3 text-base">
                          –ö–ª—é—á–µ–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–¥—É–ª—è:
                        </div>
                        <div className="text-sm text-gray-600 leading-relaxed">
                          {phase.result}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Dots Navigation */}
          <div className="flex justify-center mt-6 space-x-2">
            {phases.map((_, index) => (
              <button
                key={index}
                onClick={() => goToSlide(index)}
                className={`w-3 h-3 rounded-full transition-colors ${
                  index === currentSlide ? 'bg-blue-600' : 'bg-gray-300 hover:bg-gray-400'
                }`}
              />
            ))}
          </div>

          {/* Slide Counter */}
          <div className="text-center mt-3">
            <span className="text-sm text-gray-500">
              {currentSlide + 1} –∏–∑ {phases.length}
            </span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default RoadmapPage;
